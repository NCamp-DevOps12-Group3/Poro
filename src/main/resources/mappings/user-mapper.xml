<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserDao">
	<insert id="join" parameterType="user">
	INSERT INTO USER(
	    NICKNAME,
	    NAME,
	    GENDER,
	    JOB,
	    PHONENUMBER,
	    EMAIL,
	    PASSWORD,
	    ROLE
		
	) VALUE (
	    #{nickname},
		#{name},
		#{gender},
		#{job},
		#{phonenumber},
		#{email},
		#{password},
		#{role}
	)
	</insert>
	
	<select id="emailCheck" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM USER
		WHERE EMAIL = #{email}
	</select>
	
	<select id="nicknameCheck" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM USER
		WHERE NICKNAME = #{nickname}
	</select>
	
	<select id="nameCheck" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM USER
		WHERE NAME = #{name}
	</select>
	<select id="findMembersUsingKeyword" parameterType="string" resultType="user">
		SELECT U.NICKNAME
		, U.NAME
		, U.EMAIL
		, U.JOB
		, U.ROLE
		, U.PROFILE_IMAGE
		FROM USER U
		WHERE 1=1
		<if test="searchKeyword != null and searchKeyword != ''">
			AND (U.NICKNAME LIKE CONCAT('%', #{searchKeyword}, '%')
			OR U.NAME LIKE CONCAT('%', #{searchKeyword}, '%')
			OR U.EMAIL LIKE CONCAT('%', #{searchKeyword}, '%'))
		</if>
	</select>

	<select id="login" parameterType="user" resultType="user">
		SELECT USER_ID
			 , NICKNAME
			 , PASSWORD
			 , NAME
			 , PHONENUMBER
			 , EMAIL
			 , GENDER
			 , JOB
			 , ROLE
			 , INTRODUCTION
			 , SITE_URL
			 , REGDATE
			 , MODDATE
			 , PROFILE_IMAGE
		FROM USER
		WHERE EMAIL = #{email}
		  AND PASSWORD = #{password}
	</select>

	
	
	
	<update id="modify" parameterType="user">
	UPDATE USER
		SET NICKNAME = #{nickname},
		    NAME = #{name},
		    GENDER = #{gender},
		    PHONENUMBER = #{phonenumber},
		    JOB = #{job},
		    INTRODUCTION = #{introduction},
		    SITE_URL = #{site_url},
		    MODDATE = #{moddate},
		    PROFILE_IMAGE = #{profile_image}
	WHERE USER_ID = #{user_id}
	</update>
	
	
	<select id="passwordCheck" parameterType="string" resultType="string">
		SELECT PASSWORD
		FROM USER
		WHERE PASSWORD = #{password}
	</select>
	
	<update id="changepassword" parameterType="user">
		UPDATE USER
		SET PASSWORD = #{password}
		WHERE USER_ID = #{user_id}
		  AND EMAIL = #{email}
	
	</update>
	
	<delete id="deleteAccount" parameterType="user">
		DELETE FROM USER
		       WHERE USER_ID = #{user_id}
		       AND EMAIL = #{email}
		       

	</delete>
	
	<!-- 공지사항 목록을 검색하고 페이징 처리하는 쿼리 -->
<!--	<select id="historylog" parameterType="user" resultType="boauserrd">-->
<!--		&lt;!&ndash; 공지사항 목록 조회 쿼리 시작 &ndash;&gt;-->
<!--		SELECT-->
<!--		&lt;!&ndash; NOTICE 테이블과 MEMBER 테이블을 JOIN &ndash;&gt;-->
<!--		FROM-->
<!--		JOIN  ON-->
<!--		-->
<!--		&lt;!&ndash; 공지사항을 ID 기준으로 내림차순 정렬 &ndash;&gt;-->
<!--		ORDER BY  DESC-->
<!--		&lt;!&ndash; 페이징 처리를 위한 LIMIT와 OFFSET 설정 &ndash;&gt;-->
<!--		LIMIT 10-->
<!--	</select>-->
	
	
</mapper>