<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--쿼리문이 Dao 클래스에서 분리되어 온 것이기 때문에 namespace는 관례적으로 Dao 클래스명과 일치시킨다.-->
<mapper namespace="CommentDao">
    <select id="getCommentList" resultType="comment" parameterType="map">
        SELECT C.COMMENT_ID,
               C.PORTFOLIO_ID,
               C.USER_ID,
               C.CONTENT,
               C.REGDATE,
               C.MODDATE,
               C.COMMENT_PARENT_ID,
               COALESCE(CL.LIKECOUNT, 0) AS LIKECOUNT,
               (CASE WHEN CLU.USER_ID IS NOT NULL THEN 1 ELSE 0 END) AS ISLIKED
        FROM COMMENT C
        LEFT JOIN (
            SELECT COMMENT_ID, COUNT(*) AS LIKECOUNT
            FROM COMMENT_LIKE
            GROUP BY COMMENT_ID
        ) CL ON C.COMMENT_ID = CL.COMMENT_ID
        LEFT JOIN (
            SELECT COMMENT_ID, USER_ID
            FROM COMMENT_LIKE
            WHERE USER_ID = #{loginUser.user_id}
        ) CLU ON C.COMMENT_ID = CLU.COMMENT_ID
        WHERE C.PORTFOLIO_ID = #{portfolio.portfolio_id}
    </select>

    <insert id="postComment" parameterType="comment">
        INSERT INTO COMMENT(
            PORTFOLIO_ID,
            CONTENT,
            USER_ID,
            COMMENT_PARENT_ID
        ) VALUES (
                     #{portfolio_id},
                     #{content},
                     #{user_id},
                     #{comment_parent_id}
                 )
    </insert>

    <insert id="likeComment" parameterType="map">
        INSERT INTO COMMENT_LIKE(
            USER_ID,
            COMMENT_ID
        ) VALUES (
             #{loginUser.user_id},
             #{comment_id}
         )
    </insert>

    <delete id="unLikeComment" parameterType="map">
        DELETE FROM COMMENT_LIKE
        WHERE USER_ID = #{loginUser.user_id}
          AND COMMENT_ID = #{comment_id}
    </delete>

    <select id="getCommentById" parameterType="int" resultType="comment">
        SELECT COMMENT_ID,
               PORTFOLIO_ID,
               USER_ID,
               CONTENT,
               REGDATE,
               MODDATE,
               COMMENT_PARENT_ID
            FROM COMMENT
        WHERE COMMENT_ID = #{comment_id}
    </select>

    <delete id="deleteComment" parameterType="int">
        DELETE FROM COMMENT
        WHERE COMMENT_ID = #{comment_id}
    </delete>


</mapper>