<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserFeedsDao">
    <select id="getUserInfo" parameterType="int" resultType="profile">
        select profile_image,name,introduction,email,phonenumber,gender ,role ,job ,site_url
        from user
        where user_id  = #{id}
    </select>

    <select id="getUserPortfolioTotalCnt" parameterType="int" resultType="int">
        select count(*)
        from portfolio
        where user_id=#{id}
    </select>

    <select id="getUserBookmarkCoperationToltalCnt" parameterType="int" resultType="int">
        select count(*)
        from recruitment_bookmark
        where user_id=#{id}
    </select>
    <select id="getUserBookmarkPortfolioCnt" parameterType="int" resultType="int">
        select count(*)
        from portfolio_bookmark
        where user_id=#{id}
    </select>
    <select id="getUserPortfolio" parameterType="map" resultType="portfolio">
        SELECT
        p.portfolio_id,
        p.user_id,
        p.thumbnail_url,
        p.description,
        p.regdate,
        GROUP_CONCAT(DISTINCT st.skillname) AS skillname,
        GROUP_CONCAT(DISTINCT h.html_url) AS htmlurl,
        GROUP_CONCAT(DISTINCT c.css_url) AS cssurl,
        GROUP_CONCAT(DISTINCT j.javascript_url) AS jsurl
        FROM portfolio p
                 left JOIN portfolio_skill ps
                           ON p.portfolio_id = ps.portfolio_id
                 left JOIN skilltag st
                           ON ps.hashtag_id = st.hashtagid
                 left JOIN html h
                      ON p.portfolio_id = h.portfolio_id
                 left JOIN css c
                           ON p.portfolio_id = c.portfolio_id
                 left JOIN javascript j
        ON p.portfolio_id = j.portfolio_id
        WHERE p.user_id = #{userid}
        GROUP BY p.portfolio_id, p.user_id, p.thumbnail_url, p.description, p.regdate
        LIMIT #{criteria.amount} OFFSET #{criteria.startNum};
    </select>

    <delete id="deleteUserPortfolio" parameterType="list">
        delete from portfolio where portfolio_id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <delete id="deleteCoperationBookmark" parameterType="list">
        delete from recruitment_bookmark where bookmark_id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <delete id="deleteOtherPortfolioBookmark" parameterType="list">
        delete from portfolio_bookmark where bookmark_id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <select id="getUserPopularPortfolio" parameterType="int" resultType="portfolio">
        SELECT
            sub.portfolio_id,
            sub.user_id,
            sub.thumbnail_url,
            sub.description,
            sub.regdate,
            sub.skillname,
            sub.htmlurl,
            sub.cssurl,
            sub.jsurl
        FROM
            (SELECT
                 p.portfolio_id,
                 p.user_id,
                 p.thumbnail_url,
                 p.description,
                 p.regdate,
                 GROUP_CONCAT(DISTINCT st.skillname) AS skillname,
                 GROUP_CONCAT(DISTINCT h.html_url) AS htmlurl,
                 GROUP_CONCAT(DISTINCT c.css_url) AS cssurl,
                 GROUP_CONCAT(DISTINCT j.javascript_url) AS jsurl
             FROM portfolio p
                      JOIN portfolio_skill ps ON p.portfolio_id = ps.portfolio_id
                      JOIN skilltag st ON ps.hashtag_id = st.hashtagid
                      JOIN html h ON p.portfolio_id = h.portfolio_id
                      JOIN css c ON p.portfolio_id = c.portfolio_id
                      JOIN javascript j ON p.portfolio_id = j.portfolio_id
             WHERE p.user_id = #{userid}
             GROUP BY p.portfolio_id, p.user_id, p.thumbnail_url, p.description, p.regdate) sub
                JOIN portfolio_like pl ON sub.portfolio_id = pl.portfolio_id
        ORDER BY pl.likecount DESC
            LIMIT 5;
    </select>
    <select id="getUserBookmarkCoperation" parameterType="map" resultType="coperation">
        select  r.RECRUITMENT_ID,r.USER_ID,r.COMPANY_NAME,r.COMPANY_ICON_URL,r.RECRUITMENT_URL,r.RECRUITMENT_TITLE,r.DDAY
        ,r.REGDATE,r.MODDATE,r.LOCATION,r.CAREER,r.EDUCATION,rb.bookmark_id,GROUP_CONCAT(DISTINCT st.skillname) AS skillname
        from recruitment r
        join recruitment_bookmark rb
        on r.RECRUITMENT_ID = rb.RECRUITMENT_ID and r.user_id = rb.user_id
        join recruitment_skilltag rs
        on rs.recruitmentid = r.RECRUITMENT_ID
        join skilltag st
        on st.hashtagid = rs.hashtagid
        where r.recruitment_id in (
            select recruitment_id
            from recruitment_bookmark
            where user_id=#{userid}
                  )
        group by  r.RECRUITMENT_ID, r.USER_ID, r.COMPANY_NAME, r.COMPANY_ICON_URL, r.RECRUITMENT_URL,
                  r.RECRUITMENT_TITLE, r.DDAY, r.REGDATE, r.MODDATE, r.LOCATION, r.CAREER, r.EDUCATION, rb.bookmark_id
        LIMIT #{criteria.amount} OFFSET #{criteria.startNum};
    </select>
    <select id="getUserBookmarkPortfolio" parameterType="map" resultType="portfolio">
        SELECT
            p.portfolio_id,
            p.user_id,
            p.thumbnail_url,
            p.description,
            p.regdate,
            GROUP_CONCAT(DISTINCT st.skillname) AS skillname,
            GROUP_CONCAT(DISTINCT h.html_url) AS htmlurl,
            GROUP_CONCAT(DISTINCT c.css_url) AS cssurl,
            GROUP_CONCAT(DISTINCT j.javascript_url) AS jsurl,
            pb.bookmark_id
        FROM portfolio p
                 left JOIN portfolio_skill ps
                           ON p.portfolio_id = ps.portfolio_id
                 left JOIN skilltag st
                           ON ps.hashtag_id = st.hashtagid
                 left JOIN html h
                           ON p.portfolio_id = h.portfolio_id
                 left JOIN css c
                           ON p.portfolio_id = c.portfolio_id
                 left JOIN javascript j
                           ON p.portfolio_id = j.portfolio_id
                left join portfolio_bookmark pb
                on p.portfolio_id = pb.portfolio_id and p.user_id = pb.user_id
        where p.portfolio_id in (
            select portfolio_id
            from portfolio_bookmark
            where user_id=#{userid}
        )
        GROUP BY p.portfolio_id, p.user_id, p.thumbnail_url, p.description, p.regdate,pb.bookmark_id
            LIMIT #{criteria.amount} OFFSET #{criteria.startNum};
    </select>
</mapper>